{"ast":null,"code":"var _jsxFileName = \"/home/vul/Desktop/code/PORTFOLIO/ecommerce/htmxGolang/frontend/src/WrapperPage.js\",\n  _s = $RefreshSig$();\nimport Navbar from './Navbar';\nimport DropDowns from './DropDowns';\nimport { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WrapperPage = ({\n  content\n}) => {\n  _s();\n  const ref_productContainer = useRef(null);\n  const [isProfileOpen, setIsProfileOpen] = useState(false);\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  useEffect(() => {\n    // TODO IT BRAKES WHEN NEW CONTENT IS LOADED FROM HTMX\n    // hide DropDowns when user clicks on somewhere outside of the buttons\n    //const handleClickOutside = (event) => {\n    //  // if click was outside of \"ref_dropDownOutside\" DOM node\n    //  if (ref_dropDownOutside.current && !ref_dropDownOutside.current.contains(event.target)) {\n    //    setIsProfileOpen(false);\n    //    setIsCartOpen(false);\n    //  }\n    //};\n    //document.addEventListener('mousedown', handleClickOutside);\n\n    // htmx related\n    if (window.htmx && ref_productContainer.current) {\n      window.htmx.process(ref_productContainer.current);\n    }\n\n    // when component unmounts\n    //return () => {\n    //  document.removeEventListener('mousedown', handleClickOutside);\n    //};\n  }, [ref_productContainer]); // do ones when node mounts to DOM\n\n  //  useEffect(() => {\n  //    // This assumes you get the session ID from props, context, or a global variable\n  //    const token = window.SESSION_ID; // Or passed as a prop/context\n  //\n  //    if (token) {\n  //      document.cookie = `session=${token}`;\n  //    }\n  //\n  //    // Update the browser history\n  //    window.history.pushState({}, '', '/');\n  //  }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"DivBody\",\n    className: \"bg-gray-100 text-gray-900\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      onProfileClick: () => {\n        setIsCartOpen(false);\n        setIsProfileOpen(prev => !prev);\n      },\n      onCartClick: () => {\n        setIsProfileOpen(false);\n        setIsCartOpen(prev => !prev);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(DropDowns, {\n      isProfileOpen: isProfileOpen,\n      isCartOpen: isCartOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref_productContainer,\n      id: \"contentcontainer\",\n      class: \"contentcontainer p-6 mt-5\",\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }, this);\n};\n_s(WrapperPage, \"0rVLF8c0q697pUlRSYWkTgbd6XY=\");\n_c = WrapperPage;\nexport default WrapperPage;\nvar _c;\n$RefreshReg$(_c, \"WrapperPage\");","map":{"version":3,"names":["Navbar","DropDowns","useState","useRef","useEffect","jsxDEV","_jsxDEV","WrapperPage","content","_s","ref_productContainer","isProfileOpen","setIsProfileOpen","isCartOpen","setIsCartOpen","window","htmx","current","process","id","className","children","onProfileClick","prev","onCartClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","class","_c","$RefreshReg$"],"sources":["/home/vul/Desktop/code/PORTFOLIO/ecommerce/htmxGolang/frontend/src/WrapperPage.js"],"sourcesContent":["import Navbar from './Navbar';\nimport DropDowns from './DropDowns';\nimport { useState, useRef, useEffect } from 'react';\n\nconst WrapperPage = ({ content }) => {\n  const ref_productContainer = useRef(null);\n\n  const [isProfileOpen, setIsProfileOpen] = useState(false);\n  const [isCartOpen, setIsCartOpen] = useState(false);\n    useEffect(() => {\n      // TODO IT BRAKES WHEN NEW CONTENT IS LOADED FROM HTMX\n      // hide DropDowns when user clicks on somewhere outside of the buttons\n      //const handleClickOutside = (event) => {\n      //  // if click was outside of \"ref_dropDownOutside\" DOM node\n      //  if (ref_dropDownOutside.current && !ref_dropDownOutside.current.contains(event.target)) {\n      //    setIsProfileOpen(false);\n      //    setIsCartOpen(false);\n      //  }\n      //};\n      //document.addEventListener('mousedown', handleClickOutside);\n\n      // htmx related\n      if (window.htmx && ref_productContainer.current) {\n        window.htmx.process(ref_productContainer.current);\n      }\n\n      // when component unmounts\n      //return () => {\n      //  document.removeEventListener('mousedown', handleClickOutside);\n      //};\n    }, [ref_productContainer]);// do ones when node mounts to DOM\n\n\n//  useEffect(() => {\n//    // This assumes you get the session ID from props, context, or a global variable\n//    const token = window.SESSION_ID; // Or passed as a prop/context\n//\n//    if (token) {\n//      document.cookie = `session=${token}`;\n//    }\n//\n//    // Update the browser history\n//    window.history.pushState({}, '', '/');\n//  }, []);\n\n  return (\n  <div id=\"DivBody\" className=\"bg-gray-100 text-gray-900\">\n    {/* change target for search, add a profile img */}\n    <Navbar\n      onProfileClick={()=>{\n        setIsCartOpen(false);\n        setIsProfileOpen((prev) => !prev);\n        }\n      }\n      onCartClick={()=>{\n        setIsProfileOpen(false);\n        setIsCartOpen((prev) => !prev)\n        }\n      }\n    />\n    <DropDowns \n      isProfileOpen={isProfileOpen}\n      isCartOpen={isCartOpen}\n    />\n    <div ref={ref_productContainer} id=\"contentcontainer\" class=\"contentcontainer p-6 mt-5\">\n      {content}\n    </div>\n\n  </div>\n  );\n};\n\nexport default WrapperPage;\n\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,UAAU;AAC7B,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAMC,oBAAoB,GAAGP,MAAM,CAAC,IAAI,CAAC;EAEzC,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjDE,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA,IAAIW,MAAM,CAACC,IAAI,IAAIN,oBAAoB,CAACO,OAAO,EAAE;MAC/CF,MAAM,CAACC,IAAI,CAACE,OAAO,CAACR,oBAAoB,CAACO,OAAO,CAAC;IACnD;;IAEA;IACA;IACA;IACA;EACF,CAAC,EAAE,CAACP,oBAAoB,CAAC,CAAC,CAAC;;EAG/B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEE,oBACAJ,OAAA;IAAKa,EAAE,EAAC,SAAS;IAACC,SAAS,EAAC,2BAA2B;IAAAC,QAAA,gBAErDf,OAAA,CAACN,MAAM;MACLsB,cAAc,EAAEA,CAAA,KAAI;QAClBR,aAAa,CAAC,KAAK,CAAC;QACpBF,gBAAgB,CAAEW,IAAI,IAAK,CAACA,IAAI,CAAC;MACjC,CACD;MACDC,WAAW,EAAEA,CAAA,KAAI;QACfZ,gBAAgB,CAAC,KAAK,CAAC;QACvBE,aAAa,CAAES,IAAI,IAAK,CAACA,IAAI,CAAC;MAC9B;IACD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACFtB,OAAA,CAACL,SAAS;MACRU,aAAa,EAAEA,aAAc;MAC7BE,UAAU,EAAEA;IAAW;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACFtB,OAAA;MAAKuB,GAAG,EAAEnB,oBAAqB;MAACS,EAAE,EAAC,kBAAkB;MAACW,KAAK,EAAC,2BAA2B;MAAAT,QAAA,EACpFb;IAAO;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAER,CAAC;AAACnB,EAAA,CAlEIF,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AAoEjB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}