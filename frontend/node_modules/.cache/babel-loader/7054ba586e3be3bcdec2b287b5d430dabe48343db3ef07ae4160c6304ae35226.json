{"ast":null,"code":"var _jsxFileName = \"/home/vul/Desktop/code/PORTFOLIO/ecommerce/htmxGolang/frontend/src/Main.js\",\n  _s = $RefreshSig$();\nimport Navbar from './Navbar';\nimport DropDowns from './DropDowns';\nimport './Main.css';\nimport { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const containerRef = useRef(null);\n  useEffect(() => {\n    if (window.htmx && containerRef.current) {\n      window.htmx.process(containerRef.current);\n    }\n  }, []);\n  const ref_dropDownOutside = useRef(null);\n  const [isProfileOpen, setIsProfileOpen] = useState(false);\n  const [isCartOpen, setIsCartOpen] = useState(false);\n\n  // hide DropDowns when user clicks on somewhere outside of the buttons\n  useEffect(() => {\n    const handleClickOutside = event => {\n      // if click was outside of \"ref_dropDownOutside\" DOM node\n      if (ref_dropDownOutside.current && !ref_dropDownOutside.current.contains(event.target)) {\n        setIsProfileOpen(false);\n        setIsCartOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    // when component unmounts\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []); // do ones when node mounts to DOM\n\n  //  useEffect(() => {\n  //    // This assumes you get the session ID from props, context, or a global variable\n  //    const token = window.SESSION_ID; // Or passed as a prop/context\n  //\n  //    if (token) {\n  //      document.cookie = `session=${token}`;\n  //    }\n  //\n  //    // Update the browser history\n  //    window.history.pushState({}, '', '/');\n  //  }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"DivBody\",\n    ref: ref_dropDownOutside,\n    className: \"bg-gray-100 text-gray-900\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      onProfileClick: () => {\n        setIsCartOpen(false);\n        setIsProfileOpen(prev => !prev);\n      },\n      onCartClick: () => {\n        setIsProfileOpen(false);\n        setIsCartOpen(prev => !prev);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(DropDowns, {\n      isProfileOpen: isProfileOpen,\n      isCartOpen: isCartOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"contentcontainer\",\n      class: \"contentcontainer p-6 mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"products\",\n        class: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"API call to get products list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          \"hx-trigger\": \"revealed\",\n          \"hx-swap\": \"outerHTML\",\n          \"hx-get\": \"http://localhost:25000/main?start\",\n          class: \"text-center p-4 bg-gray-200 rounded-lg shadow-md hover:bg-gray-300 transition\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"nextpage\",\n        className: \"col-auto row-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"API call to get nextpage list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n};\n_s(Main, \"OlIxDTkLVo5XsKQCrLdKdQqmpyg=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["Navbar","DropDowns","useState","useRef","useEffect","jsxDEV","_jsxDEV","Main","_s","containerRef","window","htmx","current","process","ref_dropDownOutside","isProfileOpen","setIsProfileOpen","isCartOpen","setIsCartOpen","handleClickOutside","event","contains","target","document","addEventListener","removeEventListener","id","ref","className","children","onProfileClick","prev","onCartClick","fileName","_jsxFileName","lineNumber","columnNumber","class","_c","$RefreshReg$"],"sources":["/home/vul/Desktop/code/PORTFOLIO/ecommerce/htmxGolang/frontend/src/Main.js"],"sourcesContent":["import Navbar from './Navbar';\nimport DropDowns from './DropDowns';\nimport './Main.css';\nimport { useState, useRef, useEffect } from 'react';\n\nconst Main = () => {\n  const containerRef = useRef(null);\n\n  useEffect(() => {\n    if (window.htmx && containerRef.current) {\n      window.htmx.process(containerRef.current);\n    }\n  }, []);\n\n\n  const ref_dropDownOutside = useRef(null);\n  const [isProfileOpen, setIsProfileOpen] = useState(false);\n  const [isCartOpen, setIsCartOpen] = useState(false);\n\n  // hide DropDowns when user clicks on somewhere outside of the buttons\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      // if click was outside of \"ref_dropDownOutside\" DOM node\n      if (ref_dropDownOutside.current && !ref_dropDownOutside.current.contains(event.target)) {\n        setIsProfileOpen(false);\n        setIsCartOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    // when component unmounts\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);// do ones when node mounts to DOM\n\n\n//  useEffect(() => {\n//    // This assumes you get the session ID from props, context, or a global variable\n//    const token = window.SESSION_ID; // Or passed as a prop/context\n//\n//    if (token) {\n//      document.cookie = `session=${token}`;\n//    }\n//\n//    // Update the browser history\n//    window.history.pushState({}, '', '/');\n//  }, []);\n\n  return (\n  <div id=\"DivBody\" ref={ref_dropDownOutside} className=\"bg-gray-100 text-gray-900\">\n    {/* change target for search, add a profile img */}\n    <Navbar\n      onProfileClick={()=>{\n        setIsCartOpen(false);\n        setIsProfileOpen((prev) => !prev);\n        }\n      }\n      onCartClick={()=>{\n        setIsProfileOpen(false);\n        setIsCartOpen((prev) => !prev)\n        }\n      }\n    />\n    <DropDowns \n      isProfileOpen={isProfileOpen}\n      isCartOpen={isCartOpen}\n    />\n    <div id=\"contentcontainer\" class=\"contentcontainer p-6 mt-5\">\n      <div id=\"products\" class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 p-4\">\n          <p>API call to get products list</p>\n          <div \n            hx-trigger=\"revealed\"\n            hx-swap=\"outerHTML\"\n            hx-get=\"http://localhost:25000/main?start\"\n            class=\"text-center p-4 bg-gray-200 rounded-lg shadow-md hover:bg-gray-300 transition\"\n          ></div>\n\n      </div>\n      <div id=\"nextpage\" className=\"col-auto row-auto\">\n          <p>API call to get nextpage list</p>\n      </div>\n    </div>\n\n  </div>\n  );\n};\n\nexport default Main;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}