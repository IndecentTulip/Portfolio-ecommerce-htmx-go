{"ast":null,"code":"var _jsxFileName = \"/home/vul/Desktop/code/PORTFOLIO/ecommerce/htmxGolang/frontend/src/Navbar.js\",\n  _s = $RefreshSig$();\n//import { useEffect, useRef } from 'react';\nimport React, { useState } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = ({\n  onProfileClick,\n  onCartClick\n}) => {\n  _s();\n  //const containerRef = useRef(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchParams] = useSearchParams();\n  if (searchTerm == '') {\n    var _searchParams$get;\n    setSearchTerm((_searchParams$get = searchParams.get('search')) !== null && _searchParams$get !== void 0 ? _searchParams$get : '');\n  }\n  const navigate = useNavigate();\n  //const location = useLocation();\n\n  //useEffect(() => {\n  //  if (window.htmx && containerRef.current) {\n  //    window.htmx.process(containerRef.current);\n  //  }\n  //}, []);\n\n  const handleImageError = e => {\n    e.target.onerror = null; // Prevents infinite loop\n    e.target.src = process.env.PUBLIC_URL + '/default_profile.jpg';\n  };\n  const src = \"google.com\";\n  const cartImg = process.env.PUBLIC_URL + '/Cart.png';\n\n  //const handleKeyDown = (e) => {\n  //  if (e.key === 'Enter') {\n  //    const params = new URLSearchParams(location.search);\n  //    params.set('search', searchTerm); // Add or replace the 'search' parameter\n  //\n  //    // Keep existing path and add updated query string\n  //    navigate(`${location.pathname}?${params.toString()}`);\n  //  }\n  //};\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      // Navigate to \"/\" and include the search term as a query parameter\n      navigate(`/?num=0&search=${encodeURIComponent(searchTerm)}`);\n    }\n  };\n\n  // ref={containerRef}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed top-0 left-0 right-0 bg-white shadow-md z-50 grid grid-cols-3 items-center px-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"put burger menu\", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        children: \"put logo here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      classNameName: \"w-80\",\n      type: \"search\",\n      name: \"search\",\n      placeholder: \"Type To Search\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value),\n      onKeyDown: handleKeyDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"yRriM98CsreqHu66NOXqGkmiuRI=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useNavigate","useSearchParams","jsxDEV","_jsxDEV","Navbar","onProfileClick","onCartClick","_s","searchTerm","setSearchTerm","searchParams","_searchParams$get","get","navigate","handleImageError","e","target","onerror","src","process","env","PUBLIC_URL","cartImg","handleKeyDown","key","encodeURIComponent","className","children","href","fileName","_jsxFileName","lineNumber","columnNumber","classNameName","type","name","placeholder","value","onChange","onKeyDown","_c","$RefreshReg$"],"sources":["/home/vul/Desktop/code/PORTFOLIO/ecommerce/htmxGolang/frontend/src/Navbar.js"],"sourcesContent":["//import { useEffect, useRef } from 'react';\nimport React, { useState } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n\nconst Navbar = ({onProfileClick, onCartClick}) => {\n  //const containerRef = useRef(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchParams] = useSearchParams();\n\n  if (searchTerm == ''){\n    setSearchTerm( searchParams.get('search') ?? '');\n  }\n  \n  const navigate = useNavigate();\n  //const location = useLocation();\n\n  //useEffect(() => {\n  //  if (window.htmx && containerRef.current) {\n  //    window.htmx.process(containerRef.current);\n  //  }\n  //}, []);\n\n  const handleImageError = (e) => {\n    e.target.onerror = null; // Prevents infinite loop\n    e.target.src = process.env.PUBLIC_URL + '/default_profile.jpg';\n  };\n  const src = \"google.com\"\n\n  const cartImg = process.env.PUBLIC_URL + '/Cart.png'\n\n  //const handleKeyDown = (e) => {\n  //  if (e.key === 'Enter') {\n  //    const params = new URLSearchParams(location.search);\n  //    params.set('search', searchTerm); // Add or replace the 'search' parameter\n  //\n  //    // Keep existing path and add updated query string\n  //    navigate(`${location.pathname}?${params.toString()}`);\n  //  }\n  //};\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n       // Navigate to \"/\" and include the search term as a query parameter\n       navigate(`/?num=0&search=${encodeURIComponent(searchTerm)}`);\n    }\n  }\n\n\n  // ref={containerRef}\n  return (\n    <div className=\"fixed top-0 left-0 right-0 bg-white shadow-md z-50 grid grid-cols-3 items-center px-4\">\n\n      {/*>burger*/}\n      <div>\n        put burger menu\n        <a href='/'>\n        put logo here\n        </a>\n      </div>\n      {/*<burger*/}\n\n      {/*>search bar*/}\n       <input\n        classNameName=\"w-80\"\n        type=\"search\"\n        name=\"search\"\n        placeholder=\"Type To Search\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n        onKeyDown={handleKeyDown}\n      />\n     {/*<search bar*/}\n\n     </div>\n  );\n};\n\nexport default Navbar;\n\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,eAAe,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,MAAM,GAAGA,CAAC;EAACC,cAAc;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAChD;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,YAAY,CAAC,GAAGT,eAAe,CAAC,CAAC;EAExC,IAAIO,UAAU,IAAI,EAAE,EAAC;IAAA,IAAAG,iBAAA;IACnBF,aAAa,EAAAE,iBAAA,GAAED,YAAY,CAACE,GAAG,CAAC,QAAQ,CAAC,cAAAD,iBAAA,cAAAA,iBAAA,GAAI,EAAE,CAAC;EAClD;EAEA,MAAME,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B;;EAEA;EACA;EACA;EACA;EACA;;EAEA,MAAMc,gBAAgB,GAAIC,CAAC,IAAK;IAC9BA,CAAC,CAACC,MAAM,CAACC,OAAO,GAAG,IAAI,CAAC,CAAC;IACzBF,CAAC,CAACC,MAAM,CAACE,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAG,sBAAsB;EAChE,CAAC;EACD,MAAMH,GAAG,GAAG,YAAY;EAExB,MAAMI,OAAO,GAAGH,OAAO,CAACC,GAAG,CAACC,UAAU,GAAG,WAAW;;EAEpD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAME,aAAa,GAAIR,CAAC,IAAK;IAC3B,IAAIA,CAAC,CAACS,GAAG,KAAK,OAAO,EAAE;MACpB;MACAX,QAAQ,CAAC,kBAAkBY,kBAAkB,CAACjB,UAAU,CAAC,EAAE,CAAC;IAC/D;EACF,CAAC;;EAGD;EACA,oBACEL,OAAA;IAAKuB,SAAS,EAAC,uFAAuF;IAAAC,QAAA,gBAGpGxB,OAAA;MAAAwB,QAAA,GAAK,iBAEH,eAAAxB,OAAA;QAAGyB,IAAI,EAAC,GAAG;QAAAD,QAAA,EAAC;MAEZ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAIL7B,OAAA;MACC8B,aAAa,EAAC,MAAM;MACpBC,IAAI,EAAC,QAAQ;MACbC,IAAI,EAAC,QAAQ;MACbC,WAAW,EAAC,gBAAgB;MAC5BC,KAAK,EAAE7B,UAAW;MAClB8B,QAAQ,EAAGvB,CAAC,IAAKN,aAAa,CAACM,CAAC,CAACC,MAAM,CAACqB,KAAK,CAAE;MAC/CE,SAAS,EAAEhB;IAAc;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGE,CAAC;AAEX,CAAC;AAACzB,EAAA,CAtEIH,MAAM;EAAA,QAGaH,eAAe,EAMrBD,WAAW;AAAA;AAAAwC,EAAA,GATxBpC,MAAM;AAwEZ,eAAeA,MAAM;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}